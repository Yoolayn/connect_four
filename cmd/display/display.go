package main

import (
	"fmt"
	"time"

	logic "gitlab.com/Yoolayn/connect_four/internal/logic"
)

func main() {
	board := logic.MakeBoard()
	time.Sleep(200 * time.Millisecond)
	fmt.Print("\033[2J")
	fmt.Print("\033[2J")
	fmt.Println(board.Clone().ToTable())
	board.Claim(logic.NewChecker("#ff0000"), 0)
	time.Sleep(200 * time.Millisecond)
	fmt.Print("\033[2J")
	fmt.Println(board.Clone().ToTable())
	board.Claim(logic.NewChecker("#ffff00"), 0)
	time.Sleep(200 * time.Millisecond)
	fmt.Print("\033[2J")
	fmt.Println(board.Clone().ToTable())
	board.Claim(logic.NewChecker("#ff0000"), 0)
	time.Sleep(200 * time.Millisecond)
	fmt.Print("\033[2J")
	fmt.Println(board.Clone().ToTable())
	board.Claim(logic.NewChecker("#ffff00"), 0)
	time.Sleep(200 * time.Millisecond)
	fmt.Print("\033[2J")
	fmt.Println(board.Clone().ToTable())
	board.Claim(logic.NewChecker("#ffff00"), 1)
	time.Sleep(200 * time.Millisecond)
	fmt.Print("\033[2J")
	fmt.Println(board.Clone().ToTable())
	board.Claim(logic.NewChecker("#ff0000"), 1)
	time.Sleep(200 * time.Millisecond)
	fmt.Print("\033[2J")
	fmt.Println(board.Clone().ToTable())
	board.Claim(logic.NewChecker("#ffff00"), 1)
	time.Sleep(200 * time.Millisecond)
	fmt.Print("\033[2J")
	fmt.Println(board.Clone().ToTable())
	board.Claim(logic.NewChecker("#ff0000"), 1)
	time.Sleep(200 * time.Millisecond)
	fmt.Print("\033[2J")
	fmt.Println(board.Clone().ToTable())
	board.Claim(logic.NewChecker("#ff0000"), 2)
	time.Sleep(200 * time.Millisecond)
	fmt.Print("\033[2J")
	fmt.Println(board.Clone().ToTable())
	board.Claim(logic.NewChecker("#ff0000"), 2)
	time.Sleep(200 * time.Millisecond)
	fmt.Print("\033[2J")
	fmt.Println(board.Clone().ToTable())
	board.Claim(logic.NewChecker("#ff0000"), 2)
	time.Sleep(200 * time.Millisecond)
	fmt.Print("\033[2J")
	fmt.Println(board.Clone().ToTable())
	board.Claim(logic.NewChecker("#ff0000"), 2)
	time.Sleep(200 * time.Millisecond)
	fmt.Print("\033[2J")
	fmt.Println(board.Clone().ToTable())
	board.Claim(logic.NewChecker("#ffff00"), 3)
	time.Sleep(200 * time.Millisecond)
	fmt.Print("\033[2J")
	fmt.Println(board.Clone().ToTable())
	board.Claim(logic.NewChecker("#ffff00"), 3)
	time.Sleep(200 * time.Millisecond)
	fmt.Print("\033[2J")
	fmt.Println(board.Clone().ToTable())
	board.Claim(logic.NewChecker("#ffff00"), 3)
	time.Sleep(200 * time.Millisecond)
	fmt.Print("\033[2J")
	fmt.Println(board.Clone().ToTable())
	board.Claim(logic.NewChecker("#ffff00"), 3)
	time.Sleep(200 * time.Millisecond)
	fmt.Print("\033[2J")
	fmt.Println(board.Clone().ToTable())
	board.Claim(logic.NewChecker("#9900ff"), 4)
	time.Sleep(200 * time.Millisecond)
	fmt.Print("\033[2J")
	fmt.Println(board.Clone().ToTable())
}
